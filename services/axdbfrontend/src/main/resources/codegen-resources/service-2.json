{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2018-05-10",
    "auth":["aws.auth#sigv4"],
    "endpointPrefix":"xanadu",
    "protocol":"rest-json",
    "protocols":["rest-json"],
    "serviceFullName":"A beautiful and amazing AxdbFrontend",
    "serviceId":"AxdbFrontend",
    "signatureVersion":"v4",
    "signingName":"xanadu",
    "uid":"axdbfrontend-2018-05-10"
  },
  "operations":{
    "CreateCluster":{
      "name":"CreateCluster",
      "http":{
        "method":"POST",
        "requestUri":"/cluster",
        "responseCode":200
      },
      "input":{"shape":"CreateClusterInput"},
      "output":{"shape":"CreateClusterOutput"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Create a cluster</p>"
    },
    "CreateMultiRegionClusters":{
      "name":"CreateMultiRegionClusters",
      "http":{
        "method":"POST",
        "requestUri":"/multi-region-clusters",
        "responseCode":200
      },
      "input":{"shape":"CreateMultiRegionClustersInput"},
      "output":{"shape":"CreateMultiRegionClustersOutput"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Create clusters in multiple regions</p>"
    },
    "DeleteCluster":{
      "name":"DeleteCluster",
      "http":{
        "method":"DELETE",
        "requestUri":"/cluster/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"DeleteClusterInput"},
      "output":{"shape":"DeleteClusterOutput"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Delete a cluster</p>",
      "idempotent":true
    },
    "DeleteMultiRegionClusters":{
      "name":"DeleteMultiRegionClusters",
      "http":{
        "method":"DELETE",
        "requestUri":"/multi-region-clusters",
        "responseCode":200
      },
      "input":{"shape":"DeleteMultiRegionClustersInput"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Delete clusters in mutiple regions</p>",
      "idempotent":true
    },
    "GetCluster":{
      "name":"GetCluster",
      "http":{
        "method":"GET",
        "requestUri":"/cluster/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetClusterInput"},
      "output":{"shape":"GetClusterOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get a cluster</p>"
    },
    "GetClusterGroup":{
      "name":"GetClusterGroup",
      "http":{
        "method":"GET",
        "requestUri":"/cluster-group/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetClusterGroupInput"},
      "output":{"shape":"GetClusterGroupOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get a cluster group</p>"
    },
    "ListClusterGroups":{
      "name":"ListClusterGroups",
      "http":{
        "method":"GET",
        "requestUri":"/cluster-group",
        "responseCode":200
      },
      "input":{"shape":"ListClusterGroupsInput"},
      "output":{"shape":"ListClusterGroupsOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List cluster groups</p>"
    },
    "ListClusters":{
      "name":"ListClusters",
      "http":{
        "method":"GET",
        "requestUri":"/cluster",
        "responseCode":200
      },
      "input":{"shape":"ListClustersInput"},
      "output":{"shape":"ListClustersOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List clusters</p>"
    },
    "ListTagsForResource":{
      "name":"ListTagsForResource",
      "http":{
        "method":"GET",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"ListTagsForResourceInput"},
      "output":{"shape":"ListTagsForResourceOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List all Tags on an ARN</p>"
    },
    "TagResource":{
      "name":"TagResource",
      "http":{
        "method":"POST",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"TagResourceInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Add Tags to an ARN</p>",
      "idempotent":true
    },
    "UntagResource":{
      "name":"UntagResource",
      "http":{
        "method":"DELETE",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"UntagResourceInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Remove Tags from an ARN</p>",
      "idempotent":true
    },
    "UpdateCluster":{
      "name":"UpdateCluster",
      "http":{
        "method":"POST",
        "requestUri":"/cluster/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateClusterInput"},
      "output":{"shape":"UpdateClusterOutput"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Update a cluster</p>"
    }
  },
  "shapes":{
    "AccessDeniedException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"}
      },
      "documentation":"<p>User does not have sufficient access to perform this action</p>",
      "error":{
        "httpStatusCode":403,
        "senderFault":true
      },
      "exception":true
    },
    "Arn":{
      "type":"string",
      "documentation":"<p>Amazon Resource Name</p>",
      "max":1011,
      "min":1,
      "pattern":"arn:.+"
    },
    "ClientToken":{
      "type":"string",
      "documentation":"<p>Idempotency Token</p>",
      "max":128,
      "min":1,
      "pattern":"[!-~]+"
    },
    "ClusterArn":{
      "type":"string",
      "documentation":"<p>Cluster ARN</p>"
    },
    "ClusterArnList":{
      "type":"list",
      "member":{"shape":"ClusterArn"},
      "documentation":"<p>List of cluster arns</p>"
    },
    "ClusterCreationTime":{
      "type":"timestamp",
      "documentation":"<p>Timestamp when the Cluster was created</p>"
    },
    "ClusterEncryptionKey":{
      "type":"string",
      "documentation":"<p>The server-side encryption key used for this Cluster</p>"
    },
    "ClusterGroupArn":{
      "type":"string",
      "documentation":"<p>ClusterGroup ARN</p>"
    },
    "ClusterGroupCreationTime":{
      "type":"timestamp",
      "documentation":"<p>Timestamp when the Cluster Group was created</p>"
    },
    "ClusterGroupId":{
      "type":"string",
      "documentation":"<p>ClusterGroup ID</p>"
    },
    "ClusterGroupList":{
      "type":"list",
      "member":{"shape":"ClusterGroupSummary"},
      "documentation":"<p>List of cluster groups</p>"
    },
    "ClusterGroupSummary":{
      "type":"structure",
      "members":{
        "identifier":{"shape":"ClusterGroupId"},
        "arn":{"shape":"ClusterGroupArn"}
      },
      "documentation":"<p>Cluster Group Summary</p>"
    },
    "ClusterId":{
      "type":"string",
      "documentation":"<p>Cluster ID</p>"
    },
    "ClusterList":{
      "type":"list",
      "member":{"shape":"ClusterSummary"},
      "documentation":"<p>List of clusters</p>"
    },
    "ClusterName":{
      "type":"string",
      "documentation":"<p>Cluster Name</p>",
      "max":64,
      "min":1,
      "pattern":"[a-zA-Z](-?[a-zA-Z0-9]+)*"
    },
    "ClusterPassword":{
      "type":"string",
      "documentation":"<p>temporary cluster password for Pandora</p>",
      "sensitive":true
    },
    "ClusterStatus":{
      "type":"string",
      "documentation":"<p>Cluster Status</p>",
      "enum":[
        "CREATING",
        "ACTIVE",
        "UPDATING",
        "DELETING",
        "DELETED",
        "FAILED"
      ]
    },
    "ClusterSummary":{
      "type":"structure",
      "required":[
        "identifier",
        "arn"
      ],
      "members":{
        "identifier":{"shape":"ClusterId"},
        "name":{"shape":"ClusterName"},
        "arn":{"shape":"ClusterArn"},
        "groupArn":{"shape":"ClusterGroupArn"}
      },
      "documentation":"<p>Cluster Summary</p>"
    },
    "ConflictException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error</p>"
        },
        "resourceId":{
          "shape":"String",
          "documentation":"<p>Identifier of the resource affected</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>Type of the resource affected</p>"
        }
      },
      "documentation":"<p>Updating or deleting a resource can cause an inconsistent state</p>",
      "error":{
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true
    },
    "CreateClusterInput":{
      "type":"structure",
      "members":{
        "name":{"shape":"ClusterName"},
        "groupArn":{"shape":"ClusterGroupArn"},
        "groupWitnessRegion":{"shape":"Region"},
        "deletionProtectionEnabled":{"shape":"DeletionProtectionEnabled"},
        "encryptionKey":{"shape":"ClusterEncryptionKey"},
        "tags":{"shape":"TagMap"},
        "clientToken":{
          "shape":"ClientToken",
          "idempotencyToken":true
        }
      }
    },
    "CreateClusterOutput":{
      "type":"structure",
      "required":[
        "identifier",
        "arn",
        "status",
        "creationTime",
        "deletionProtectionEnabled"
      ],
      "members":{
        "identifier":{"shape":"ClusterId"},
        "name":{"shape":"ClusterName"},
        "arn":{"shape":"ClusterArn"},
        "groupArn":{"shape":"ClusterGroupArn"},
        "status":{"shape":"ClusterStatus"},
        "creationTime":{"shape":"ClusterCreationTime"},
        "deletionProtectionEnabled":{"shape":"DeletionProtectionEnabled"},
        "encryptionKey":{"shape":"ClusterEncryptionKey"},
        "quorumRegion":{"shape":"Region"},
        "multiRegionClusterArns":{"shape":"ClusterArnList"},
        "superuserPassword":{"shape":"ClusterPassword"}
      },
      "documentation":"<p>Output Mixin</p>"
    },
    "CreateMultiRegionClustersInput":{
      "type":"structure",
      "required":[
        "clusterRegionList",
        "quorumRegion"
      ],
      "members":{
        "clusterRegionList":{"shape":"RegionList"},
        "quorumRegion":{"shape":"Region"},
        "clientToken":{
          "shape":"ClientToken",
          "idempotencyToken":true
        }
      }
    },
    "CreateMultiRegionClustersOutput":{
      "type":"structure",
      "required":["multiRegionClusterArns"],
      "members":{
        "multiRegionClusterArns":{"shape":"ClusterArnList"}
      }
    },
    "DeleteClusterInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "location":"uri",
          "locationName":"identifier"
        },
        "clientToken":{
          "shape":"ClientToken",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"client-token"
        }
      }
    },
    "DeleteClusterOutput":{
      "type":"structure",
      "required":[
        "identifier",
        "arn",
        "status",
        "creationTime",
        "deletionProtectionEnabled"
      ],
      "members":{
        "identifier":{"shape":"ClusterId"},
        "name":{"shape":"ClusterName"},
        "arn":{"shape":"ClusterArn"},
        "groupArn":{"shape":"ClusterGroupArn"},
        "status":{"shape":"ClusterStatus"},
        "creationTime":{"shape":"ClusterCreationTime"},
        "deletionProtectionEnabled":{"shape":"DeletionProtectionEnabled"},
        "encryptionKey":{"shape":"ClusterEncryptionKey"},
        "quorumRegion":{"shape":"Region"},
        "multiRegionClusterArns":{"shape":"ClusterArnList"}
      },
      "documentation":"<p>Output Mixin</p>"
    },
    "DeleteMultiRegionClustersInput":{
      "type":"structure",
      "required":["multiRegionClusterArns"],
      "members":{
        "multiRegionClusterArns":{
          "shape":"ClusterArnList",
          "location":"querystring",
          "locationName":"multi-region-cluster-arns"
        },
        "clientToken":{
          "shape":"ClientToken",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"client-token"
        }
      }
    },
    "DeletionProtectionEnabled":{
      "type":"boolean",
      "documentation":"<p>Deletion Protection</p>",
      "box":true
    },
    "GetClusterGroupInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"ClusterGroupId",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetClusterGroupOutput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{"shape":"ClusterGroupId"},
        "arn":{"shape":"ClusterGroupArn"},
        "witnessRegion":{"shape":"Region"},
        "clusters":{"shape":"ClusterArnList"},
        "creationTime":{"shape":"ClusterGroupCreationTime"}
      },
      "documentation":"<p>Cluster Group Output Mixin</p>"
    },
    "GetClusterInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetClusterOutput":{
      "type":"structure",
      "required":[
        "identifier",
        "arn",
        "status",
        "creationTime",
        "deletionProtectionEnabled"
      ],
      "members":{
        "identifier":{"shape":"ClusterId"},
        "name":{"shape":"ClusterName"},
        "arn":{"shape":"ClusterArn"},
        "groupArn":{"shape":"ClusterGroupArn"},
        "status":{"shape":"ClusterStatus"},
        "creationTime":{"shape":"ClusterCreationTime"},
        "deletionProtectionEnabled":{"shape":"DeletionProtectionEnabled"},
        "encryptionKey":{"shape":"ClusterEncryptionKey"},
        "quorumRegion":{"shape":"Region"},
        "multiRegionClusterArns":{"shape":"ClusterArnList"}
      },
      "documentation":"<p>Output Mixin</p>"
    },
    "Integer":{
      "type":"integer",
      "box":true
    },
    "InternalServerException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error</p>"
        },
        "retryAfterSeconds":{
          "shape":"Integer",
          "documentation":"<p>Advice to clients on when the call can be safely retried</p>",
          "location":"header",
          "locationName":"Retry-After"
        }
      },
      "documentation":"<p>Unexpected error during processing of request</p>",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true,
      "retryable":{"throttling":false}
    },
    "ListClusterGroupsInput":{
      "type":"structure",
      "members":{
        "maxResults":{
          "shape":"MaxResults",
          "location":"querystring",
          "locationName":"max-results"
        },
        "nextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"next-token"
        }
      }
    },
    "ListClusterGroupsOutput":{
      "type":"structure",
      "required":["clusterGroups"],
      "members":{
        "nextToken":{"shape":"NextToken"},
        "clusterGroups":{"shape":"ClusterGroupList"}
      }
    },
    "ListClustersInput":{
      "type":"structure",
      "members":{
        "maxResults":{
          "shape":"MaxResults",
          "location":"querystring",
          "locationName":"max-results"
        },
        "nextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"next-token"
        }
      }
    },
    "ListClustersOutput":{
      "type":"structure",
      "required":["clusters"],
      "members":{
        "nextToken":{"shape":"NextToken"},
        "clusters":{"shape":"ClusterList"}
      }
    },
    "ListTagsForResourceInput":{
      "type":"structure",
      "required":["resourceArn"],
      "members":{
        "resourceArn":{
          "shape":"Arn",
          "location":"uri",
          "locationName":"resourceArn"
        }
      }
    },
    "ListTagsForResourceOutput":{
      "type":"structure",
      "members":{
        "tags":{"shape":"TagMap"}
      }
    },
    "MaxResults":{
      "type":"integer",
      "documentation":"<p>Max results that will be returned per page</p>",
      "box":true,
      "max":100,
      "min":1
    },
    "NextToken":{
      "type":"string",
      "documentation":"<p>Opaque token used to retrieve next page</p>"
    },
    "Region":{
      "type":"string",
      "documentation":"<p>AWS Region name (e.g.: 'us-east-1')</p>",
      "max":20,
      "min":0
    },
    "RegionList":{
      "type":"list",
      "member":{"shape":"Region"},
      "documentation":"<p>List of regions</p>"
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "required":[
        "message",
        "resourceId",
        "resourceType"
      ],
      "members":{
        "message":{"shape":"String"},
        "resourceId":{
          "shape":"String",
          "documentation":"<p>Hypothetical identifier of the resource which does not exist</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>Hypothetical type of the resource which does not exist</p>"
        }
      },
      "documentation":"<p>Request references a resource which does not exist</p>",
      "error":{
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true
    },
    "ServiceQuotaExceededException":{
      "type":"structure",
      "required":[
        "message",
        "resourceId",
        "resourceType",
        "serviceCode",
        "quotaCode"
      ],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error</p>"
        },
        "resourceId":{
          "shape":"String",
          "documentation":"<p>Identifier of the resource affected</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>Type of the resource affected</p>"
        },
        "serviceCode":{
          "shape":"String",
          "documentation":"<p>Service Quotas requirement to identify originating service</p>"
        },
        "quotaCode":{
          "shape":"String",
          "documentation":"<p>Service Quotas requirement to identify originating quota</p>"
        }
      },
      "documentation":"<p>Request would cause a service quota to be exceeded</p>",
      "error":{
        "httpStatusCode":402,
        "senderFault":true
      },
      "exception":true
    },
    "String":{"type":"string"},
    "TagKey":{
      "type":"string",
      "documentation":"<p>Tag Key</p>",
      "max":128,
      "min":1
    },
    "TagKeyList":{
      "type":"list",
      "member":{"shape":"TagKey"},
      "documentation":"<p>List of tag keys</p>",
      "max":200,
      "min":0
    },
    "TagMap":{
      "type":"map",
      "key":{"shape":"TagKey"},
      "value":{"shape":"TagValue"},
      "documentation":"<p>Map of tags</p>",
      "max":200,
      "min":0
    },
    "TagResourceInput":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tags"
      ],
      "members":{
        "resourceArn":{
          "shape":"Arn",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tags":{"shape":"TagMap"}
      }
    },
    "TagValue":{
      "type":"string",
      "documentation":"<p>Tag Value</p>",
      "max":256,
      "min":0
    },
    "ThrottlingException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error</p>"
        },
        "serviceCode":{
          "shape":"String",
          "documentation":"<p>Service Quotas requirement to identify originating service</p>"
        },
        "quotaCode":{
          "shape":"String",
          "documentation":"<p>Service Quotas requirement to identify originating quota</p>"
        },
        "retryAfterSeconds":{
          "shape":"Integer",
          "documentation":"<p>Advice to clients on when the call can be safely retried</p>",
          "location":"header",
          "locationName":"Retry-After"
        }
      },
      "documentation":"<p>Request was denied due to request throttling</p>",
      "error":{
        "httpStatusCode":429,
        "senderFault":true
      },
      "exception":true,
      "retryable":{"throttling":true}
    },
    "UntagResourceInput":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tagKeys"
      ],
      "members":{
        "resourceArn":{
          "shape":"Arn",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tagKeys":{
          "shape":"TagKeyList",
          "location":"querystring",
          "locationName":"tagKeys"
        }
      }
    },
    "UpdateClusterInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "location":"uri",
          "locationName":"identifier"
        },
        "deletionProtectionEnabled":{"shape":"DeletionProtectionEnabled"},
        "encryptionKey":{"shape":"ClusterEncryptionKey"},
        "clientToken":{
          "shape":"ClientToken",
          "idempotencyToken":true
        }
      }
    },
    "UpdateClusterOutput":{
      "type":"structure",
      "required":[
        "identifier",
        "arn",
        "status",
        "creationTime",
        "deletionProtectionEnabled"
      ],
      "members":{
        "identifier":{"shape":"ClusterId"},
        "name":{"shape":"ClusterName"},
        "arn":{"shape":"ClusterArn"},
        "groupArn":{"shape":"ClusterGroupArn"},
        "status":{"shape":"ClusterStatus"},
        "creationTime":{"shape":"ClusterCreationTime"},
        "deletionProtectionEnabled":{"shape":"DeletionProtectionEnabled"},
        "encryptionKey":{"shape":"ClusterEncryptionKey"},
        "quorumRegion":{"shape":"Region"},
        "multiRegionClusterArns":{"shape":"ClusterArnList"}
      },
      "documentation":"<p>Output Mixin</p>"
    },
    "ValidationException":{
      "type":"structure",
      "required":[
        "message",
        "reason"
      ],
      "members":{
        "message":{"shape":"String"},
        "reason":{"shape":"ValidationExceptionReason"},
        "fieldList":{"shape":"ValidationExceptionFieldList"}
      },
      "documentation":"<p>The input fails to satisfy the constraints specified by an AWS service</p>",
      "error":{
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    },
    "ValidationExceptionField":{
      "type":"structure",
      "required":[
        "name",
        "message"
      ],
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The field name</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>Message describing why the field failed validation</p>"
        }
      },
      "documentation":"<p>A field that caused the error</p>"
    },
    "ValidationExceptionFieldList":{
      "type":"list",
      "member":{"shape":"ValidationExceptionField"},
      "documentation":"<p>List of fields that caused the error</p>"
    },
    "ValidationExceptionReason":{
      "type":"string",
      "documentation":"<p>Reason the request failed validation</p>",
      "enum":[
        "unknownOperation",
        "cannotParse",
        "fieldValidationFailed",
        "deletionProtectionEnabled",
        "other"
      ]
    }
  },
  "documentation":"<p>An example service, deployed with the Octane Service creator, which will echo the string</p>"
}
