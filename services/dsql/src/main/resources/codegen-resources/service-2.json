{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2018-05-10",
    "auth":["aws.auth#sigv4"],
    "endpointPrefix":"dsql",
    "protocol":"rest-json",
    "protocols":["rest-json"],
    "serviceFullName":"Amazon Aurora DSQL",
    "serviceId":"DSQL",
    "signatureVersion":"v4",
    "signingName":"dsql",
    "uid":"dsql-2018-05-10"
  },
  "operations":{
    "CreateCluster":{
      "name":"CreateCluster",
      "http":{
        "method":"POST",
        "requestUri":"/cluster",
        "responseCode":200
      },
      "input":{"shape":"CreateClusterInput"},
      "output":{"shape":"CreateClusterOutput"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Create a cluster</p>"
    },
    "CreateMultiRegionClusters":{
      "name":"CreateMultiRegionClusters",
      "http":{
        "method":"POST",
        "requestUri":"/multi-region-clusters",
        "responseCode":200
      },
      "input":{"shape":"CreateMultiRegionClustersInput"},
      "output":{"shape":"CreateMultiRegionClustersOutput"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Create clusters in multiple regions</p>"
    },
    "DeleteCluster":{
      "name":"DeleteCluster",
      "http":{
        "method":"DELETE",
        "requestUri":"/cluster/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"DeleteClusterInput"},
      "output":{"shape":"DeleteClusterOutput"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Delete a cluster</p>",
      "idempotent":true
    },
    "DeleteMultiRegionClusters":{
      "name":"DeleteMultiRegionClusters",
      "http":{
        "method":"DELETE",
        "requestUri":"/multi-region-clusters",
        "responseCode":200
      },
      "input":{"shape":"DeleteMultiRegionClustersInput"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Delete clusters in multiple regions</p>",
      "idempotent":true
    },
    "GetCluster":{
      "name":"GetCluster",
      "http":{
        "method":"GET",
        "requestUri":"/cluster/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetClusterInput"},
      "output":{"shape":"GetClusterOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get a cluster</p>"
    },
    "ListClusters":{
      "name":"ListClusters",
      "http":{
        "method":"GET",
        "requestUri":"/cluster",
        "responseCode":200
      },
      "input":{"shape":"ListClustersInput"},
      "output":{"shape":"ListClustersOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List clusters</p>"
    },
    "ListTagsForResource":{
      "name":"ListTagsForResource",
      "http":{
        "method":"GET",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"ListTagsForResourceInput"},
      "output":{"shape":"ListTagsForResourceOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List all Tags on an ARN</p>"
    },
    "TagResource":{
      "name":"TagResource",
      "http":{
        "method":"POST",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"TagResourceInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Add Tags to an ARN</p>",
      "idempotent":true
    },
    "UntagResource":{
      "name":"UntagResource",
      "http":{
        "method":"DELETE",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"UntagResourceInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Remove Tags from an ARN</p>",
      "idempotent":true
    },
    "UpdateCluster":{
      "name":"UpdateCluster",
      "http":{
        "method":"POST",
        "requestUri":"/cluster/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateClusterInput"},
      "output":{"shape":"UpdateClusterOutput"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Update a cluster</p>"
    }
  },
  "shapes":{
    "AccessDeniedException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"}
      },
      "documentation":"<p>User does not have sufficient access to perform this action</p>",
      "error":{
        "httpStatusCode":403,
        "senderFault":true
      },
      "exception":true
    },
    "Arn":{
      "type":"string",
      "documentation":"<p>Amazon Resource Name</p>",
      "max":1011,
      "min":1,
      "pattern":"arn:.+"
    },
    "ClientToken":{
      "type":"string",
      "documentation":"<p>Idempotency Token</p>",
      "max":128,
      "min":1,
      "pattern":"[!-~]+"
    },
    "ClusterArn":{
      "type":"string",
      "documentation":"<p>Cluster ARN</p>"
    },
    "ClusterArnList":{
      "type":"list",
      "member":{"shape":"ClusterArn"},
      "documentation":"<p>List of cluster arns</p>"
    },
    "ClusterCreationTime":{
      "type":"timestamp",
      "documentation":"<p>Timestamp when the Cluster was created</p>"
    },
    "ClusterId":{
      "type":"string",
      "documentation":"<p>Cluster ID</p>"
    },
    "ClusterList":{
      "type":"list",
      "member":{"shape":"ClusterSummary"},
      "documentation":"<p>List of clusters</p>"
    },
    "ClusterPropertyMap":{
      "type":"map",
      "key":{"shape":"Region"},
      "value":{"shape":"LinkedClusterProperties"},
      "documentation":"<p>Properties for each linked cluster</p>"
    },
    "ClusterStatus":{
      "type":"string",
      "documentation":"<p>Cluster Status</p>",
      "enum":[
        "CREATING",
        "ACTIVE",
        "UPDATING",
        "DELETING",
        "DELETED",
        "FAILED"
      ]
    },
    "ClusterSummary":{
      "type":"structure",
      "required":[
        "identifier",
        "arn"
      ],
      "members":{
        "identifier":{"shape":"ClusterId"},
        "arn":{"shape":"ClusterArn"}
      },
      "documentation":"<p>Cluster Summary</p>"
    },
    "ConflictException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error</p>"
        },
        "resourceId":{
          "shape":"String",
          "documentation":"<p>Identifier of the resource affected</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>Type of the resource affected</p>"
        }
      },
      "documentation":"<p>Updating or deleting a resource can cause an inconsistent state</p>",
      "error":{
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true
    },
    "CreateClusterInput":{
      "type":"structure",
      "members":{
        "deletionProtectionEnabled":{"shape":"DeletionProtectionEnabled"},
        "tags":{"shape":"TagMap"},
        "clientToken":{
          "shape":"ClientToken",
          "idempotencyToken":true
        }
      }
    },
    "CreateClusterOutput":{
      "type":"structure",
      "required":[
        "identifier",
        "arn",
        "status",
        "creationTime",
        "deletionProtectionEnabled"
      ],
      "members":{
        "identifier":{"shape":"ClusterId"},
        "arn":{"shape":"ClusterArn"},
        "status":{"shape":"ClusterStatus"},
        "creationTime":{"shape":"ClusterCreationTime"},
        "deletionProtectionEnabled":{"shape":"DeletionProtectionEnabled"}
      },
      "documentation":"<p>Output Mixin</p>"
    },
    "CreateMultiRegionClustersInput":{
      "type":"structure",
      "required":[
        "linkedRegionList",
        "witnessRegion"
      ],
      "members":{
        "linkedRegionList":{"shape":"RegionList"},
        "clusterProperties":{"shape":"ClusterPropertyMap"},
        "witnessRegion":{"shape":"Region"},
        "clientToken":{
          "shape":"ClientToken",
          "idempotencyToken":true
        }
      }
    },
    "CreateMultiRegionClustersOutput":{
      "type":"structure",
      "required":["linkedClusterArns"],
      "members":{
        "linkedClusterArns":{"shape":"ClusterArnList"}
      }
    },
    "DeleteClusterInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "location":"uri",
          "locationName":"identifier"
        },
        "clientToken":{
          "shape":"ClientToken",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"client-token"
        }
      }
    },
    "DeleteClusterOutput":{
      "type":"structure",
      "required":[
        "identifier",
        "arn",
        "status",
        "creationTime",
        "deletionProtectionEnabled"
      ],
      "members":{
        "identifier":{"shape":"ClusterId"},
        "arn":{"shape":"ClusterArn"},
        "status":{"shape":"ClusterStatus"},
        "creationTime":{"shape":"ClusterCreationTime"},
        "deletionProtectionEnabled":{"shape":"DeletionProtectionEnabled"}
      },
      "documentation":"<p>Output Mixin</p>"
    },
    "DeleteMultiRegionClustersInput":{
      "type":"structure",
      "required":["linkedClusterArns"],
      "members":{
        "linkedClusterArns":{
          "shape":"ClusterArnList",
          "location":"querystring",
          "locationName":"linked-cluster-arns"
        },
        "clientToken":{
          "shape":"ClientToken",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"client-token"
        }
      }
    },
    "DeletionProtectionEnabled":{
      "type":"boolean",
      "documentation":"<p>Deletion Protection</p>",
      "box":true
    },
    "GetClusterInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetClusterOutput":{
      "type":"structure",
      "required":[
        "identifier",
        "arn",
        "status",
        "creationTime",
        "deletionProtectionEnabled"
      ],
      "members":{
        "identifier":{"shape":"ClusterId"},
        "arn":{"shape":"ClusterArn"},
        "status":{"shape":"ClusterStatus"},
        "creationTime":{"shape":"ClusterCreationTime"},
        "deletionProtectionEnabled":{"shape":"DeletionProtectionEnabled"},
        "witnessRegion":{"shape":"Region"},
        "linkedClusterArns":{"shape":"ClusterArnList"}
      },
      "documentation":"<p>Output Mixin</p>"
    },
    "Integer":{
      "type":"integer",
      "box":true
    },
    "InternalServerException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error</p>"
        },
        "retryAfterSeconds":{
          "shape":"Integer",
          "documentation":"<p>Advice to clients on when the call can be safely retried</p>",
          "location":"header",
          "locationName":"Retry-After"
        }
      },
      "documentation":"<p>Unexpected error during processing of request</p>",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true,
      "retryable":{"throttling":false}
    },
    "LinkedClusterProperties":{
      "type":"structure",
      "members":{
        "deletionProtectionEnabled":{"shape":"DeletionProtectionEnabled"},
        "tags":{"shape":"TagMap"}
      },
      "documentation":"<p>Linked Cluster Properties</p>"
    },
    "ListClustersInput":{
      "type":"structure",
      "members":{
        "maxResults":{
          "shape":"MaxResults",
          "location":"querystring",
          "locationName":"max-results"
        },
        "nextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"next-token"
        }
      }
    },
    "ListClustersOutput":{
      "type":"structure",
      "required":["clusters"],
      "members":{
        "nextToken":{"shape":"NextToken"},
        "clusters":{"shape":"ClusterList"}
      }
    },
    "ListTagsForResourceInput":{
      "type":"structure",
      "required":["resourceArn"],
      "members":{
        "resourceArn":{
          "shape":"Arn",
          "location":"uri",
          "locationName":"resourceArn"
        }
      }
    },
    "ListTagsForResourceOutput":{
      "type":"structure",
      "members":{
        "tags":{"shape":"TagMap"}
      }
    },
    "MaxResults":{
      "type":"integer",
      "documentation":"<p>Max results that will be returned per page</p>",
      "box":true,
      "max":100,
      "min":1
    },
    "NextToken":{
      "type":"string",
      "documentation":"<p>Opaque token used to retrieve next page</p>"
    },
    "Region":{
      "type":"string",
      "documentation":"<p>AWS Region name (e.g.: 'us-east-1')</p>",
      "max":20,
      "min":0
    },
    "RegionList":{
      "type":"list",
      "member":{"shape":"Region"},
      "documentation":"<p>List of regions</p>"
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "required":[
        "message",
        "resourceId",
        "resourceType"
      ],
      "members":{
        "message":{"shape":"String"},
        "resourceId":{
          "shape":"String",
          "documentation":"<p>Hypothetical identifier of the resource which does not exist</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>Hypothetical type of the resource which does not exist</p>"
        }
      },
      "documentation":"<p>Request references a resource which does not exist</p>",
      "error":{
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true
    },
    "ServiceQuotaExceededException":{
      "type":"structure",
      "required":[
        "message",
        "resourceId",
        "resourceType",
        "serviceCode",
        "quotaCode"
      ],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error</p>"
        },
        "resourceId":{
          "shape":"String",
          "documentation":"<p>Identifier of the resource affected</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>Type of the resource affected</p>"
        },
        "serviceCode":{
          "shape":"String",
          "documentation":"<p>Service Quotas requirement to identify originating service</p>"
        },
        "quotaCode":{
          "shape":"String",
          "documentation":"<p>Service Quotas requirement to identify originating quota</p>"
        }
      },
      "documentation":"<p>Request would cause a service quota to be exceeded</p>",
      "error":{
        "httpStatusCode":402,
        "senderFault":true
      },
      "exception":true
    },
    "String":{"type":"string"},
    "TagKey":{
      "type":"string",
      "documentation":"<p>Tag Key</p>",
      "max":128,
      "min":1,
      "pattern":"[a-zA-Z0-9_.:/=+\\-@ ]*"
    },
    "TagKeyList":{
      "type":"list",
      "member":{"shape":"TagKey"},
      "documentation":"<p>List of tag keys</p>",
      "max":200,
      "min":0
    },
    "TagMap":{
      "type":"map",
      "key":{"shape":"TagKey"},
      "value":{"shape":"TagValue"},
      "documentation":"<p>Map of tags</p>",
      "max":200,
      "min":0
    },
    "TagResourceInput":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tags"
      ],
      "members":{
        "resourceArn":{
          "shape":"Arn",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tags":{"shape":"TagMap"}
      }
    },
    "TagValue":{
      "type":"string",
      "documentation":"<p>Tag Value</p>",
      "max":256,
      "min":0,
      "pattern":"[a-zA-Z0-9_.:/=+\\-@ ]*"
    },
    "ThrottlingException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error</p>"
        },
        "serviceCode":{
          "shape":"String",
          "documentation":"<p>Service Quotas requirement to identify originating service</p>"
        },
        "quotaCode":{
          "shape":"String",
          "documentation":"<p>Service Quotas requirement to identify originating quota</p>"
        },
        "retryAfterSeconds":{
          "shape":"Integer",
          "documentation":"<p>Advice to clients on when the call can be safely retried</p>",
          "location":"header",
          "locationName":"Retry-After"
        }
      },
      "documentation":"<p>Request was denied due to request throttling</p>",
      "error":{
        "httpStatusCode":429,
        "senderFault":true
      },
      "exception":true,
      "retryable":{"throttling":true}
    },
    "UntagResourceInput":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tagKeys"
      ],
      "members":{
        "resourceArn":{
          "shape":"Arn",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tagKeys":{
          "shape":"TagKeyList",
          "location":"querystring",
          "locationName":"tagKeys"
        }
      }
    },
    "UpdateClusterInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "location":"uri",
          "locationName":"identifier"
        },
        "deletionProtectionEnabled":{"shape":"DeletionProtectionEnabled"},
        "clientToken":{
          "shape":"ClientToken",
          "idempotencyToken":true
        }
      }
    },
    "UpdateClusterOutput":{
      "type":"structure",
      "required":[
        "identifier",
        "arn",
        "status",
        "creationTime",
        "deletionProtectionEnabled"
      ],
      "members":{
        "identifier":{"shape":"ClusterId"},
        "arn":{"shape":"ClusterArn"},
        "status":{"shape":"ClusterStatus"},
        "creationTime":{"shape":"ClusterCreationTime"},
        "deletionProtectionEnabled":{"shape":"DeletionProtectionEnabled"},
        "witnessRegion":{"shape":"Region"},
        "linkedClusterArns":{"shape":"ClusterArnList"}
      },
      "documentation":"<p>Output Mixin</p>"
    },
    "ValidationException":{
      "type":"structure",
      "required":[
        "message",
        "reason"
      ],
      "members":{
        "message":{"shape":"String"},
        "reason":{"shape":"ValidationExceptionReason"},
        "fieldList":{"shape":"ValidationExceptionFieldList"}
      },
      "documentation":"<p>The input fails to satisfy the constraints specified by an AWS service</p>",
      "error":{
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    },
    "ValidationExceptionField":{
      "type":"structure",
      "required":[
        "name",
        "message"
      ],
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The field name</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>Message describing why the field failed validation</p>"
        }
      },
      "documentation":"<p>A field that caused the error</p>"
    },
    "ValidationExceptionFieldList":{
      "type":"list",
      "member":{"shape":"ValidationExceptionField"},
      "documentation":"<p>List of fields that caused the error</p>"
    },
    "ValidationExceptionReason":{
      "type":"string",
      "documentation":"<p>Reason the request failed validation</p>",
      "enum":[
        "unknownOperation",
        "cannotParse",
        "fieldValidationFailed",
        "deletionProtectionEnabled",
        "other"
      ]
    }
  },
  "documentation":"<p>Amazon Aurora DSQL is a serverless, distributed SQL database suitable for workloads of any size. Aurora DSQL provides you with a familiar relational database experience based on PostgreSQL that lets you get started quickly. Aurora DSQL offers reliable multi-AZ database clusters in single and multi-Region configurations. Aurora DSQL supports active-active read and write to endpoints, so Aurora DSQL is always available even if an Availability Zone or if an AWS Region is unavailable. With Aurora DSQL, you don't have to manage, patch, or scale any servers to manage, patch, or scale. There are no maintenance windows or planned downtime.</p>"
}
